{
	"artifacts" : 
	[
		{
			"path" : "sgemm/sgemm"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"target_link_libraries",
			"target_compile_options",
			"target_include_directories"
		],
		"files" : 
		[
			"sgemm/CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 3,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 13,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 14,
				"parent" : 0
			},
			{
				"command" : 2,
				"file" : 0,
				"line" : 17,
				"parent" : 0
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 11,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g --generate-code=arch=compute_52,code=[compute_52,sm_52]"
				},
				{
					"backtrace" : 4,
					"fragment" : "-G"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 5,
					"path" : "/home/crane/dev/cuda_ops/sgemm/include"
				},
				{
					"backtrace" : 3,
					"isSystem" : true,
					"path" : "/usr/local/cuda/include"
				}
			],
			"language" : "CUDA",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					4294967295
				],
				"standard" : "17"
			},
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5
			]
		},
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 5,
					"path" : "/home/crane/dev/cuda_ops/sgemm/include"
				},
				{
					"backtrace" : 3,
					"isSystem" : true,
					"path" : "/usr/local/cuda/include"
				}
			],
			"language" : "CXX",
			"sourceIndexes" : 
			[
				6
			]
		}
	],
	"id" : "sgemm::@276bdf204a6a8cb1b010",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			},
			{
				"fragment" : "-L/usr/local/cuda/targets/x86_64-linux/lib/stubs",
				"role" : "libraryPath"
			},
			{
				"fragment" : "-L/usr/local/cuda/targets/x86_64-linux/lib",
				"role" : "libraryPath"
			},
			{
				"fragment" : "-Wl,-rpath,/usr/local/cuda/lib64",
				"role" : "libraries"
			},
			{
				"backtrace" : 2,
				"fragment" : "/usr/lib/x86_64-linux-gnu/libopenblas.so",
				"role" : "libraries"
			},
			{
				"backtrace" : 3,
				"fragment" : "/usr/local/cuda/lib64/libcudart.so",
				"role" : "libraries"
			},
			{
				"backtrace" : 3,
				"fragment" : "/usr/local/cuda/lib64/libcublas.so",
				"role" : "libraries"
			},
			{
				"fragment" : "-lcudadevrt",
				"role" : "libraries"
			},
			{
				"fragment" : "-lcudart_static",
				"role" : "libraries"
			},
			{
				"fragment" : "-lrt",
				"role" : "libraries"
			},
			{
				"fragment" : "-lpthread",
				"role" : "libraries"
			},
			{
				"fragment" : "-ldl",
				"role" : "libraries"
			}
		],
		"language" : "CXX"
	},
	"name" : "sgemm",
	"nameOnDisk" : "sgemm",
	"paths" : 
	{
		"build" : "sgemm",
		"source" : "sgemm"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sgemm/src/sgemm.cu",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sgemm/src/sgemm_v0_global_mem.cu",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sgemm/src/sgemm_v1_shared_mem.cu",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sgemm/src/sgemm_v2_increase_workload_of_threads.cu",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sgemm/src/sgemm_v3_float4.cu",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "sgemm/src/sgemm_v4_reg.cu",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 1,
			"path" : "sgemm/src/utils.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
